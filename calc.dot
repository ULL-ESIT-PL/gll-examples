digraph packrattle {
  node [fontname=Courier];

  "26" -> "25";
  "25" -> "19";
  "19" -> "18";
  "18" -> "15";
  "15" -> "4";
  "4" -> "3";
  "15" -> "11";
  "11" -> "10";
  "10" -> "8";
  "8" -> "27";
  "10" -> "7";
  "7" -> "6";
  "6" -> "5";
  "10" -> "26";
  "10" -> "7";
  "10" -> "9";
  "9" -> "28";
  "18" -> "17";
  "17" -> "16";
  "16" -> "14";
  "14" -> "13";
  "13" -> "7";
  "13" -> "12";
  "12" -> "29";
  "12" -> "30";
  "13" -> "7";
  "16" -> "15";
  "25" -> "24";
  "24" -> "23";
  "23" -> "22";
  "22" -> "21";
  "21" -> "7";
  "21" -> "20";
  "20" -> "31";
  "20" -> "32";
  "21" -> "7";
  "23" -> "19";

  "26" [label="[26] map\nmap:([ map:([ (map:/\\d+/ or map:([ drop:...", shape=rect];
  "25" [label="[25] seq\n[ map:([ (map:/\\d+/ or map:([ drop:'(', ...", shape=rect];
  "19" [label="[19] map\nmap:([ (map:/\\d+/ or map:([ drop:'(', dr...", shape=rect];
  "18" [label="[18] seq\n[ (map:/\\d+/ or map:([ drop:'(', drop:op...", shape=rect];
  "15" [label="[15] alt\nmap:/\\d+/ or map:([ drop:'(', drop:optio...", shape=rect];
  "4" [label="[4] map\nmap:/\\d+/", shape=rect];
  "3" [label="[3] regex\n/\\d+/", shape=rect];
  "11" [label="[11] map\nmap:([ drop:'(', drop:optional:/[ \\t]+/,...", shape=rect];
  "10" [label="[10] seq\n[ drop:'(', drop:optional:/[ \\t]+/, ...,...", shape=rect];
  "8" [label="[8] drop\ndrop:'('", shape=rect];
  "27" [label="[27] string\n'('", shape=rect];
  "7" [label="[7] drop\ndrop:optional:/[ \\t]+/", shape=rect];
  "6" [label="[6] optional\noptional:/[ \\t]+/", shape=rect];
  "5" [label="[5] regex\n/[ \\t]+/", shape=rect];
  "9" [label="[9] drop\ndrop:')'", shape=rect];
  "28" [label="[28] string\n')'", shape=rect];
  "17" [label="[17] repeat\n([ map:([ drop:optional:/[ \\t]+/, ('*' o...", shape=rect];
  "16" [label="[16] seq\n[ map:([ drop:optional:/[ \\t]+/, ('*' or...", shape=rect];
  "14" [label="[14] map\nmap:([ drop:optional:/[ \\t]+/, ('*' or '...", shape=rect];
  "13" [label="[13] seq\n[ drop:optional:/[ \\t]+/, ('*' or '/'), ...", shape=rect];
  "12" [label="[12] alt\n'*' or '/'", shape=rect];
  "29" [label="[29] string\n'*'", shape=rect];
  "30" [label="[30] string\n'/'", shape=rect];
  "24" [label="[24] repeat\n([ map:([ drop:optional:/[ \\t]+/, ('+' o...", shape=rect];
  "23" [label="[23] seq\n[ map:([ drop:optional:/[ \\t]+/, ('+' or...", shape=rect];
  "22" [label="[22] map\nmap:([ drop:optional:/[ \\t]+/, ('+' or '...", shape=rect];
  "21" [label="[21] seq\n[ drop:optional:/[ \\t]+/, ('+' or '-'), ...", shape=rect];
  "20" [label="[20] alt\n'+' or '-'", shape=rect];
  "31" [label="[31] string\n'+'", shape=rect];
  "32" [label="[32] string\n'-'", shape=rect];
}
